syntax = "proto2";
package originsrv;

message UpstreamRequest {
  optional OriginPackageIdent ident = 1;
  optional string target = 2;
}

message AccountInvitationListRequest {
  optional uint64 account_id = 1;
}

message AccountInvitationListResponse {
  optional uint64 account_id = 1;
  repeated OriginInvitation invitations = 2;
}

enum PackageChannelTrigger {
  Unknown = 0;
  BuilderUI = 1;
  HabClient = 2;
}

enum PackageChannelOperation {
  Promote = 0;
  Demote = 1;
}

message PackageGroupChannelAudit {
  optional uint64 origin_id = 1;
  optional uint64 channel_id = 2;
  repeated uint64 package_ids = 3 [packed=true];
  optional PackageChannelOperation operation = 4;
  optional PackageChannelTrigger trigger = 5;
  optional uint64 requester_id = 6;
  optional string requester_name = 7;
  optional uint64 group_id = 8;
}

message PackageChannelAudit {
  optional uint64 package_id = 1;
  optional uint64 channel_id = 2;
  optional PackageChannelOperation operation = 3;
  optional PackageChannelTrigger trigger = 4;
  optional uint64 requester_id = 5;
  optional string requester_name = 6;
  optional uint64 origin_id = 7;
}

message CheckOriginAccessRequest {
  oneof account_info {
    uint64 account_id = 1;
    string account_name = 2;
  }
  oneof origin_info {
    uint64 origin_id = 3;
    string origin_name = 4;
  }
}

message CheckOriginAccessResponse {
  optional bool has_access = 1;
}

message CheckOriginOwnerRequest {
  optional uint64 account_id = 1;
  optional string origin_name = 2;
}

message CheckOriginOwnerResponse {
  optional bool is_owner = 1;
}

message MyOriginsRequest {
  optional uint64 account_id = 1;
}

message MyOriginsResponse {
  repeated Origin origins = 1;
}

enum OriginPackageVisibility {
  Public = 1;
  Private = 2;
  Hidden = 3;
}

message Origin {
  optional uint64 id = 1;
  optional string name = 2;
  optional uint64 owner_id = 3;
  optional string private_key_name = 4;
  optional OriginPackageVisibility default_package_visibility = 5;
}

message OriginCreate {
  optional string name = 1;
  optional uint64 owner_id = 2;
  optional string owner_name = 3;
  optional OriginPackageVisibility default_package_visibility = 4;
}

message OriginDelete {
  optional string name = 1;
}

message OriginGet {
  optional string name = 1;
}

message OriginUpdate {
  optional uint64 id = 1;
  optional string name = 2; // just for routing/sharding purposes - you can't update the name of an origin
  optional OriginPackageVisibility default_package_visibility = 3;
}

message OriginChannel {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional uint64 owner_id = 4;
}

message OriginChannelIdent {
  optional string origin = 1;
  optional string name = 2;
}

message OriginChannelCreate {
  optional uint64 origin_id = 1;
  optional string origin_name = 2;
  optional string name = 3;
  optional uint64 owner_id = 4;
}

message OriginChannelGet {
  optional string origin_name = 1;
  optional string name = 2;
}

message OriginChannelListRequest {
  optional uint64 origin_id = 1;
  optional bool include_sandbox_channels = 2;
}

message OriginChannelListResponse {
  optional uint64 origin_id = 1;
  repeated OriginChannel channels = 2;
}

message OriginChannelPackageGet {
  reserved 3;
  reserved "account_id";
  optional string name = 1;
  optional OriginPackageIdent ident = 2;
  repeated OriginPackageVisibility visibilities = 4;
}

message OriginChannelPackageLatestGet {
  reserved 4;
  reserved "account_id";
  optional string name = 1;
  optional OriginPackageIdent ident = 2;
  optional string target = 3;
  repeated OriginPackageVisibility visibilities = 5;
}

message OriginChannelPackageListRequest {
  reserved 5;
  reserved "account_id";
  optional string name = 1;
  optional OriginPackageIdent ident = 2;
  optional uint64 start = 3;
  optional uint64 stop = 4;
  repeated OriginPackageVisibility visibilities = 6;
}

message OriginChannelDelete {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
}

message OriginInvitation {
  optional uint64 id = 1;
  optional uint64 account_id = 2;
  optional string account_name = 3;
  optional uint64 origin_id = 4;
  optional string origin_name = 5;
  optional uint64 owner_id = 6;
}

message OriginInvitationAcceptRequest {
  optional uint64 account_id = 1;
  optional uint64 invite_id = 2;
  optional string origin_name = 3;
  optional bool ignore = 4;
}

message OriginInvitationCreate {
  optional uint64 account_id = 1;
  optional string account_name = 2;
  optional uint64 origin_id = 3;
  optional string origin_name = 4;
  optional uint64 owner_id = 5;
}

message OriginInvitationListRequest {
  optional uint64 origin_id = 1;
}

message OriginInvitationListResponse {
  optional uint64 origin_id = 1;
  repeated OriginInvitation invitations = 2;
}

message OriginInvitationIgnoreRequest {
  optional uint64 invitation_id = 1;
  optional uint64 account_id = 2;
}

message OriginInvitationRescindRequest {
  optional uint64 invitation_id = 1;
  optional uint64 owner_id = 2;
}

message OriginKeyIdent {
  optional string origin = 1;
  optional string revision = 2;
  optional string location = 3;
}

message OriginMemberListRequest {
  optional uint64 origin_id = 1;
}

message OriginMemberListResponse {
  optional uint64 origin_id = 1;
  repeated string members = 2;
}

message OriginMemberRemove {
  optional uint64 origin_id = 1;
  optional string account_name = 2;
}

message OriginPackage {
  optional uint64 id = 1;
  optional uint64 owner_id = 2;
  optional uint64 origin_id = 3;
  optional OriginPackageIdent ident = 4;
  optional string checksum = 5;
  optional string manifest = 6;
  repeated OriginPackageIdent deps = 7;
  repeated OriginPackageIdent tdeps = 8;
  repeated uint32 exposes = 9 [packed=true];
  optional string config = 10;
  optional string target = 11;
  optional OriginPackageVisibility visibility = 12;
}

message OriginPackageIdent {
  optional string origin = 1;
  optional string name = 2;
  optional string version = 3;
  optional string release = 4;
}

message OriginPackageVersion {
  optional string origin = 1;
  optional string name = 2;
  optional string version = 3;
  optional uint64 release_count = 4;
  optional string latest = 5;
  repeated string platforms = 6;
}

message OriginPackagePlatformListRequest {
  reserved 2;
  reserved "account_id";
  optional OriginPackageIdent ident = 1;
  repeated OriginPackageVisibility visibilities = 3;
}

message OriginPackagePlatformListResponse {
  repeated string platforms = 1;
}

message OriginPackageCreate {
  optional uint64 owner_id = 1;
  optional uint64 origin_id = 2;
  optional OriginPackageIdent ident = 3;
  optional string checksum = 4;
  optional string manifest = 5;
  repeated OriginPackageIdent deps = 6;
  repeated OriginPackageIdent tdeps = 7;
  repeated uint32 exposes = 8 [packed=true];
  optional string config = 9;
  optional string target = 10;
  optional OriginPackageVisibility visibility = 11;
}

message OriginPackageGet {
  reserved 2, 3;
  reserved "account_id", "show_hidden";
  optional OriginPackageIdent ident = 1;
  repeated OriginPackageVisibility visibilities = 4;
}

message OriginPackageLatestGet {
  reserved 3;
  reserved "account_id";
  optional OriginPackageIdent ident = 1;
  optional string target = 2;
  repeated OriginPackageVisibility visibilities = 4;
}

message OriginPackageListRequest {
  reserved 5;
  reserved "account_id";
  optional OriginPackageIdent ident = 1;
  optional uint64 start = 2;
  optional uint64 stop = 3;
  optional bool distinct = 4;
  repeated OriginPackageVisibility visibilities = 6;
}

message OriginPackageListResponse {
  optional uint64 start = 1;
  optional uint64 stop = 2;
  optional uint64 count = 3;
  repeated OriginPackageIdent idents = 4;
}

message OriginPackageGroupPromote {
  optional uint64 channel_id = 1;
  repeated uint64 package_ids = 2 [packed=true];
  optional string origin = 3;
}

message OriginPackageGroupDemote {
  optional uint64 channel_id = 1;
  repeated uint64 package_ids = 2 [packed=true];
  optional string origin = 3;
}

message OriginPackagePromote {
  optional uint64 channel_id = 1;
  optional uint64 package_id = 2;
  optional OriginPackageIdent ident = 3;
}

message OriginPackageDemote {
  optional uint64 channel_id = 1;
  optional uint64 package_id = 2;
  optional OriginPackageIdent ident = 3;
}

message OriginPackageChannelListRequest {
  reserved 2;
  reserved "account_id";
  optional OriginPackageIdent ident = 1;
  repeated OriginPackageVisibility visibilities = 3;
}

message OriginPackageChannelListResponse {
  repeated OriginChannel channels = 1;
}

message OriginPackageSearchRequest {
  reserved 6;
  reserved "account_id";
  optional string origin = 1;
  optional string query = 2;
  optional uint64 start = 3;
  optional uint64 stop = 4;
  optional bool distinct = 5;
  repeated Origin my_origins = 7;
}

message OriginPackageUniqueListRequest {
  reserved 4;
  reserved "account_id";
  optional string origin = 1;
  optional uint64 start = 2;
  optional uint64 stop = 3;
  repeated OriginPackageVisibility visibilities = 5;
}

message OriginPackageUniqueListResponse {
  optional uint64 start = 1;
  optional uint64 stop = 2;
  optional uint64 count = 3;
  repeated OriginPackageIdent idents = 4;
}

message OriginPackageVersionListRequest {
  reserved 3;
  reserved "account_id";
  optional string origin = 1;
  optional string name = 2;
  repeated OriginPackageVisibility visibilities = 4;
}

message OriginPackageVersionListResponse {
  repeated OriginPackageVersion versions = 1;
}

message OriginPackageUpdate {
  optional OriginPackage pkg = 1;
}

// Origin Project
message OriginProject {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string origin_name = 3;
  optional string package_name = 4;
  optional string name = 5;
  optional string plan_path = 6;
  optional uint64 owner_id = 7;
  optional string vcs_type = 8;
  optional string vcs_data = 9;
  optional uint32 vcs_installation_id = 12;
  optional OriginPackageVisibility visibility = 13;
  optional bool auto_build = 14;
}

message OriginProjectCreate {
  optional OriginProject project = 1;
}

message OriginProjectDelete {
  optional string name = 1;
  optional uint64 requestor_id = 2;
}

message OriginProjectGet {
  optional string name = 1;
}

message OriginProjectUpdate {
  optional uint64 requestor_id = 1;
  optional OriginProject project = 2;
}

message OriginProjectListGet {
  optional string origin = 1;
}

message OriginProjectList {
  repeated string names = 1;
}

// Origin Secret
message OriginSecret {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional string value = 4;
}

message OriginSecretDecrypted {
  optional OriginSecret decrypted_secret = 1;
}

message OriginSecretCreate {
  optional OriginSecret secret = 1;
}

message OriginSecretDelete {
  optional string name = 1;
  optional uint64 origin_id = 2;
}

message OriginSecretGet {
  optional uint64 origin_id = 1;
  optional string name = 2;
}

message OriginSecretListGet {
  optional uint64 origin_id = 1;
}

message OriginSecretList {
  repeated OriginSecret secrets = 1;
}

message  OriginPublicEncryptionKey {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional string revision = 4;
  optional bytes body = 5;
  optional uint64 owner_id = 6;
}

message  OriginPublicEncryptionKeyCreate {
  optional OriginPublicEncryptionKey public_encryption_key = 1;
}

message OriginPrivateEncryptionKeyGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
}

message  OriginPublicEncryptionKeyGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
  optional string revision = 3;
}

message  OriginPublicEncryptionKeyLatestGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
}

message OriginPublicEncryptionKeyListRequest {
  optional uint64 owner_id = 1;
  optional uint64 origin_id = 2;
}

message OriginPublicEncryptionKeyListResponse {
  optional uint64 origin_id = 1;
  repeated OriginPublicEncryptionKey keys = 2;
}

message OriginPrivateEncryptionKey {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional string revision = 4;
  optional bytes body = 5;
  optional uint64 owner_id = 6;
}

message OriginPrivateEncryptionKeyCreate {
  optional OriginPrivateEncryptionKey private_encryption_key = 1;
}

message OriginPublicSigningKey {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional string revision = 4;
  optional bytes body = 5;
  optional uint64 owner_id = 6;
}

message OriginPublicSigningKeyCreate {
  optional uint64 origin_id = 1;
  optional string name = 2;
  optional string revision = 3;
  optional bytes body = 4;
  optional uint64 owner_id = 5;
}

message OriginPublicSigningKeyGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
  optional string revision = 3;
}

message OriginPublicSigningKeyLatestGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
}

message OriginPublicSigningKeyListRequest {
  optional uint64 owner_id = 1;
  optional uint64 origin_id = 2;
}

message OriginPublicSigningKeyListResponse {
  optional uint64 origin_id = 1;
  repeated OriginPublicSigningKey keys = 2;
}

message OriginPrivateSigningKey {
  optional uint64 id = 1;
  optional uint64 origin_id = 2;
  optional string name = 3;
  optional string revision = 4;
  optional bytes body = 5;
  optional uint64 owner_id = 6;
}

message OriginPrivateSigningKeyCreate {
  optional uint64 origin_id = 1;
  optional string name = 2;
  optional string revision = 3;
  optional bytes body = 4;
  optional uint64 owner_id = 5;
}

message OriginPrivateSigningKeyGet {
  optional uint64 owner_id = 1;
  optional string origin = 2;
}

message OriginIntegration {
  optional string origin = 1;
  optional string integration = 2;
  optional string name = 3;
  optional string body = 4;
}

message OriginIntegrationCreate {
  optional OriginIntegration integration = 1;
}

message OriginIntegrationDelete {
  optional OriginIntegration integration = 1;
}

message OriginIntegrationGet {
  optional OriginIntegration integration = 1;
}

message OriginIntegrationGetNames {
  optional string origin = 1;
  optional string integration = 2;
}

message OriginIntegrationNames {
  repeated string names = 1;
}

message OriginIntegrationRequest {
  optional string origin = 1;
}

message OriginIntegrationResponse {
  repeated OriginIntegration integrations = 1;
}

message OriginProjectIntegration {
  optional string origin = 1;
  optional string name = 2;
  optional string integration = 3;
  optional string integration_name = 4;
  optional string body = 5;
}

message OriginProjectIntegrationCreate {
  optional OriginProjectIntegration integration = 1;
}

message OriginProjectIntegrationDelete {
  optional string origin = 1;
  optional string name = 2;
  optional string integration = 3;
}

message OriginProjectIntegrationGet {
  optional OriginProjectIntegration integration = 1;
}

message OriginProjectIntegrationRequest {
  optional string origin = 1;
  optional string name = 2;
}

message OriginProjectIntegrationResponse {
  repeated OriginProjectIntegration integrations = 1;
}

// Sessions

enum OAuthProvider {
  GitHub = 0;
  None = 1;
  Bitbucket = 2;
  AzureAD = 3;
  GitLab = 4;
  Okta = 5;
  ActiveDirectory = 6;
  ChefAutomate = 7;
}

message Account {
  optional uint64 id = 1;
  optional string email = 2;
  optional string name = 3;
}

message AccountFindOrCreate {
  optional string name = 1;
  optional string email = 2;
}

// get an account by GH username
message AccountGet {
  optional string name = 1;
}

message AccountGetId {
  optional uint64 id = 1;
}

message AccountCreate {
  optional string name = 1;
  optional string email = 2;
}

message AccountUpdate {
  optional uint64 id = 1;
  optional string email = 2;
}

message AccessToken {
    optional uint64 account_id = 1;
    optional uint32 flags = 2;
    optional int64 expires = 3;
}

message AccountToken {
  optional uint64 id = 1;
  optional uint64 account_id = 2;
  optional string token = 3;
  optional string created_at = 4; // RFC3339-formatted time
}

message AccountTokensGet {
  optional uint64 account_id = 1;
}

message AccountTokenGet {
  optional uint64 id = 1;
}

message AccountTokens {
  repeated AccountToken tokens = 1;
}

message AccountTokenCreate {
  optional uint64 account_id = 1;
  optional string token = 2;
}

message AccountTokenRevoke {
  optional uint64 id = 1;
}

message AccountTokenValidate {
  optional uint64 account_id = 1;
  optional string token = 2;
}

enum SessionType {
  User = 0;
  Builder = 1;
}

message Session {
  optional uint64 id = 1;
  optional string email = 2;
  optional string name = 3;
  // base64 encoded binary representation of SessionToken
  optional string token = 4;
  optional uint32 flags = 5;
  optional string oauth_token = 6;
  optional SessionType session_type = 7;  // TBD - Remove this
}

message SessionCreate {
  optional string token = 1;
  optional string extern_id = 2;
  optional string email = 3;
  optional string name = 4;
  optional OAuthProvider provider = 5;
  optional string app_token = 6;
  optional SessionType session_type = 7;
}

message SessionGet {
  optional SessionToken token = 1;
}

message SessionToken {
  optional uint64 account_id = 1;
  optional string extern_id = 2;
  optional OAuthProvider provider = 3;
  optional bytes token = 4;
}
